/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 scene.gltf --transform --keepmeshes 
Files: scene.gltf [146.83KB] > scene-transformed.glb [2.68MB] (-1725%)
Author: re1monsen (https://sketchfab.com/re1monsen)
License: SKETCHFAB Editorial (https://sketchfab.com/licenses)
Source: https://sketchfab.com/3d-models/dieter-rams-braun-tp-1-radio-player-835476cd6b7e4ab593ee70bab2f68e76
Title: Dieter Rams, Braun TP 1 Radio Player
*/

import { useRef, useEffect, forwardRef } from "react";
import gsap from "gsap";
import { useFrame } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";
import { useSnapshot } from "valtio";
import { state } from "@/store";

const Case = ({
  nodes,
  materials,
  position,
  rotation,
}: {
  nodes: any;
  materials: any;
  rotation?: [number, number, number];
  position?: [number, number, number];
}) => {
  return (
    <group position={position} rotation={rotation}>
      <mesh
        geometry={nodes.Object_10.geometry}
        material={materials.BraunTP1_case}
        position={[1.314, 0.186, -0.185]}
        rotation={[0, -0.238, 0]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_14.geometry}
        material={materials.BraunTP1_case}
        position={[1.314, 0.186, -0.185]}
        rotation={[0, -0.238, 0]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_12.geometry}
        material={materials.BraunTP1_case}
        position={[1.314, 0.186, -0.185]}
        rotation={[0, -0.238, 0]}
        scale={0.092}
      />
    </group>
  );
};

const Speaker = ({
  nodes,
  materials,
  position,
  rotation,
}: {
  nodes: any;
  materials: any;
  rotation?: [number, number, number];
  position?: [number, number, number];
}) => {
  return (
    <group position={position} rotation={rotation}>
      <mesh
        geometry={nodes.Object_66.geometry}
        material={materials.BraunTP1_main}
        position={[1.359, -0.034, 0.017]}
        rotation={[0, -0.318, 0]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_68.geometry}
        material={materials.BraunTP1_main}
        position={[1.359, -0.034, 0.017]}
        rotation={[0, -0.318, 0]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_70.geometry}
        material={materials.BraunTP1_main}
        position={[1.359, -0.034, 0.017]}
        rotation={[0, -0.318, 0]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_72.geometry}
        material={materials.BraunTP1_main}
        position={[1.359, -0.034, 0.017]}
        rotation={[0, -0.318, 0]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_74.geometry}
        material={materials.BraunTP1_main}
        position={[1.359, -0.034, 0.017]}
        rotation={[0, -0.318, 0]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_76.geometry}
        material={materials.BraunTP1_main}
        position={[1.359, -0.034, 0.017]}
        rotation={[0, -0.318, 0]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_78.geometry}
        material={materials.BraunTP1_main}
        position={[1.359, -0.034, 0.017]}
        rotation={[0, -0.318, 0]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_80.geometry}
        material={materials.BraunTP1_main}
        position={[1.359, -0.034, 0.017]}
        rotation={[0, -0.318, 0]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_84.geometry}
        material={materials.BraunTP1_GLASS}
        position={[1.359, -0.034, 0.017]}
        rotation={[0, -0.318, 0]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_82.geometry}
        material={materials.BraunTP1_main}
        position={[1.359, -0.034, 0.017]}
        rotation={[0, -0.318, 0]}
        scale={0.092}
      />
    </group>
  );
};

const Player = ({
  nodes,
  materials,
  position,
  rotation,
}: {
  nodes: any;
  materials: any;
  rotation?: [number, number, number];
  position?: [number, number, number];
}) => {
  return (
    <group position={position} rotation={rotation}>
      <mesh
        geometry={nodes.Object_96.geometry}
        material={materials.BraunTP1_main}
        position={[1.029, 0.033, -0.039]}
        rotation={[-Math.PI / 2, 0, 0.314]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_100.geometry}
        material={materials.BraunTP1_main}
        position={[1.054, 0.06, 0.04]}
        rotation={[0, 0.314, 0]}
        scale={[0.137, 0.137, 0.044]}
      />
      <mesh
        geometry={nodes.Object_110.geometry}
        material={materials.BraunTP1_main}
        position={[1.11, 0.071, 0.076]}
        rotation={[-Math.PI / 2, 0, 0.314]}
        scale={[0.087, 0.087, 0.092]}
      />
      <mesh
        geometry={nodes.Object_104.geometry}
        material={materials.BraunTP1_main}
        position={[0.98, 0.052, 0.168]}
        rotation={[-Math.PI / 2, 0, 1.885]}
        scale={0.003}
      />
      <mesh
        geometry={nodes.Object_98.geometry}
        material={materials.BraunTP1_main}
        position={[1.11, 0.074, 0.076]}
        rotation={[-Math.PI / 2, 0, 0.314]}
        scale={0.002}
      />
      <mesh
        geometry={nodes.Object_112.geometry}
        material={materials.BraunTP1_main}
        position={[1.11, 0.076, 0.076]}
        rotation={[-Math.PI / 2, 0, 0.314]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_94.geometry}
        material={materials.BraunTP1_main}
        position={[1.041, 0.032, -0.001]}
        rotation={[-Math.PI / 2, 0, 0.314]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_102.geometry}
        material={materials.BraunTP1_main}
        position={[1.041, 0.032, -0.001]}
        rotation={[-Math.PI / 2, 0, 0.314]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_106.geometry}
        material={materials.BraunTP1_main}
        position={[1.11, 0.071, 0.076]}
        rotation={[-Math.PI / 2, 0, 0.314]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_114.geometry}
        material={materials.BraunTP1_main}
        position={[1.11, 0.055, 0.076]}
        rotation={[0, 0.314, 0]}
        scale={0.057}
      />
      <mesh
        geometry={nodes.Object_116.geometry}
        material={materials.BraunTP1_puck}
        position={[1.013, 0.041, 0.074]}
        rotation={[-1.294, 0.027, 0.143]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_108.geometry}
        material={materials.BraunTP1_main}
        position={[1.11, 0.071, 0.076]}
        rotation={[-Math.PI / 2, 0, 0.314]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_118.geometry}
        material={materials.BraunTP1_puck}
        position={[1.013, 0.041, 0.074]}
        rotation={[-1.294, 0.027, 0.143]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_120.geometry}
        material={materials.BraunTP1_puck}
        position={[1.013, 0.041, 0.074]}
        rotation={[-1.294, 0.027, 0.143]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_122.geometry}
        material={materials.BraunTP1_puck}
        position={[1.013, 0.041, 0.074]}
        rotation={[-1.294, 0.027, 0.143]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_124.geometry}
        material={materials.BraunTP1_puck}
        position={[1.013, 0.041, 0.074]}
        rotation={[-1.294, 0.027, 0.143]}
        scale={0.092}
      />
    </group>
  );
};

const Record = forwardRef(function Record(
  {
    position = [1.11, 0.08, 0.076],
    rotation,
  }: {
    rotation?: [number, number, number];
    position?: [number, number, number];
  },
  ref: any
) {
  const { nodes, materials } = useGLTF("/assets/record-transformed.glb") as any;

  return (
    <group ref={ref} position={position} rotation={rotation}>
      {/* <mesh
        geometry={nodes.Object_136.geometry}
        material={materials.Vinyl_record}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_138.geometry}
        material={materials.Vinyl_record}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.092}
      /> */}
      <mesh
        name="Buffer_Object"
        geometry={nodes.Buffer_Object.geometry}
        material={materials["Material.001"]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.05}
      />
      <mesh
        name="Circle"
        geometry={nodes.Circle.geometry}
        material={materials.Material}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.05}
      />
    </group>
  );
});

const BuiltSpeaker = ({
  nodes,
  materials,
  position,
  rotation,
}: {
  nodes: any;
  materials: any;
  rotation?: [number, number, number];
  position?: [number, number, number];
}) => {
  return (
    <group position={position} rotation={rotation}>
      <mesh
        geometry={nodes.Object_4.geometry}
        material={materials.BraunTP1_case}
        position={[0, 0.186, 0]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_6.geometry}
        material={materials.BraunTP1_case}
        position={[0, 0.186, 0]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_8.geometry}
        material={materials.BraunTP1_case}
        position={[0, 0.186, 0]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_16.geometry}
        material={materials.BraunTP1_main}
        position={[0, 0.186, 0]}
        scale={0.092}
      />

      {/* Speaker */}
      {/* <mesh
        geometry={nodes.Object_18.geometry}
        material={materials.BraunTP1_main}
        position={[-0.12, 0.234, 0.015]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_20.geometry}
        material={materials.BraunTP1_main}
        position={[-0.12, 0.203, 0.015]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_22.geometry}
        material={materials.BraunTP1_GLASS}
        position={[-0.119, 0.222, -0.014]}
        scale={0.092}
      /> */}

      <mesh
        geometry={nodes.Object_24.geometry}
        material={materials.BraunTP1_main}
        position={[0, 0.186, 0]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_26.geometry}
        material={materials.BraunTP1_main}
        position={[0, 0.186, 0]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_28.geometry}
        material={materials.BraunTP1_main}
        position={[0.042, 0.072, 0.041]}
        scale={0.002}
      />
      <mesh
        geometry={nodes.Object_30.geometry}
        material={materials.BraunTP1_main}
        position={[-0.11, 0.024, 0.019]}
        rotation={[0, 0, Math.PI / 2]}
        scale={0.003}
      />
      <mesh
        geometry={nodes.Object_32.geometry}
        material={materials.BraunTP1_main}
        position={[0, 0.186, 0]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_34.geometry}
        material={materials.BraunTP1_main}
        position={[0, 0.186, 0]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_36.geometry}
        material={materials.BraunTP1_main}
        position={[0, 0.186, 0]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_38.geometry}
        material={materials.BraunTP1_main}
        position={[0, 0.186, 0]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_40.geometry}
        material={materials.BraunTP1_main}
        position={[0, 0.186, 0]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_42.geometry}
        material={materials.BraunTP1_main}
        position={[0, 0.186, 0]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_44.geometry}
        material={materials.BraunTP1_main}
        position={[0, 0.082, 0.027]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[0.137, 0.137, 0.044]}
      />
      <mesh
        geometry={nodes.Object_46.geometry}
        material={materials.BraunTP1_main}
        position={[0, 0.186, 0]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_48.geometry}
        material={materials.BraunTP1_main}
        position={[-0.119, 0.222, -0.014]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_50.geometry}
        material={materials.BraunTP1_main}
        position={[0.042, 0.072, 0.038]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_52.geometry}
        material={materials.BraunTP1_main}
        position={[0.042, 0.072, 0.038]}
        scale={[0.087, 0.087, 0.092]}
      />
      <mesh
        geometry={nodes.Object_54.geometry}
        material={materials.BraunTP1_main}
        position={[0.042, 0.072, 0.043]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_56.geometry}
        material={materials.BraunTP1_GLASS}
        position={[0, 0.186, 0]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_58.geometry}
        material={materials.BraunTP1_main}
        position={[0, 0.167, -0.001]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_60.geometry}
        material={materials.BraunTP1_main}
        position={[0, 0.167, -0.001]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_62.geometry}
        material={materials.BraunTP1_main}
        position={[0.042, 0.072, 0.038]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_64.geometry}
        material={materials.BraunTP1_main}
        position={[0.042, 0.072, 0.022]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.057}
      />
      <mesh
        geometry={nodes.Object_126.geometry}
        material={materials.BraunTP1_puck}
        position={[-0.051, 0.099, -0.009]}
        rotation={[0.278, 0, 0]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_128.geometry}
        material={materials.BraunTP1_puck}
        position={[-0.051, 0.099, -0.009]}
        rotation={[0.278, 0, 0]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_130.geometry}
        material={materials.BraunTP1_puck}
        position={[-0.051, 0.099, -0.009]}
        rotation={[0.278, 0, 0]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_132.geometry}
        material={materials.BraunTP1_puck}
        position={[-0.051, 0.099, -0.009]}
        rotation={[0.278, 0, 0]}
        scale={0.092}
      />
      <mesh
        geometry={nodes.Object_134.geometry}
        material={materials.BraunTP1_puck}
        position={[-0.051, 0.099, -0.009]}
        rotation={[0.278, 0, 0]}
        scale={0.092}
      />
    </group>
  );
};

const _ = (props: any) => {
  const snap = useSnapshot(state);
  const { nodes, materials } = useGLTF("/assets/deiter-transformed.glb") as any;

  const ref = useRef() as any;
  const record = useRef() as any;

  useFrame(() => {
    snap.musicPlaying && (record.current.rotation.y -= 0.01);
  });

  useEffect(() => {
    if (!ref.current) return;
    if (snap.musicPlaying) {
      gsap.to(ref.current.rotation, {
        x: -0.2,
        y: -0.2,
        z: -Math.PI / 2,
        duration: 2,
        ease: "power4.inOut",
      });
      gsap.to(ref.current.position, {
        x: -1.5,
        y: 2,
        z: 2.5,
        duration: 2,
        ease: "power4.inOut",
      });
    } else {
      gsap.to(ref.current.rotation, {
        x: 0,
        y: 0,
        z: 0,
        duration: 1.5,
        ease: "power4.out",
      });
      gsap.to(ref.current.position, {
        x: 0.5,
        y: 0,
        z: 0,
        duration: 1,
        ease: "power4.out",
      });
    }
  }, [snap.musicPlaying]);

  useEffect(() => {
    if (!record.current) return;
    gsap.to(record.current.position, {
      z: 0.0438 + 0.15,
      duration: 1,
      ease: "power4.inOut",
      onComplete: () => {
        gsap.to(record.current.rotation, {
          x: snap.side == "front" ? Math.PI / 2 : -Math.PI / 2,
          duration: 1,
          ease: "power4.inOut",
          onComplete: () => {
            gsap.to(record.current.position, {
              z: 0.0438,
              duration: 1,
              ease: "power4.inOut",
            });
          },
        });
      },
    });
  }, [snap.side]);

  return (
    <group
      ref={ref}
      {...props}
      scale={11}
      dispose={null}
      onClick={() => {
        state.musicPlaying = !state.musicPlaying;
      }}
    >
      <Record
        ref={record}
        position={[0.0425, 0.073, 0.0438]}
        // position={[-1.068, 0.147, -0.035]} on speaker
        rotation={[Math.PI / 2, 0, 0]}
      />

      <BuiltSpeaker nodes={nodes} materials={materials} rotation={[0, 0, 0]} />
    </group>
  );
};

useGLTF.preload("/assets/deiter-transformed.glb");

export default _;
